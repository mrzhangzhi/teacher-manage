<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zt.manage.mapper.UserMapper">

    <select id="selectByPhoneNoAndPassword" resultType="user">
        select * from sys_user where phone_no=#{phoneNo} and password=#{password}
    </select>

    <select id="selectByUserId" resultType="user">
        select * from sys_user where user_id=#{userId}
    </select>

    <select id="selectRoleByUserId" resultType="java.lang.Integer">
        select role_id from sys_user_role_mapper_list where user_id=#{userId}
    </select>

    <sql id="ListQuerySql">
        from sys_user
        <where>
            user_id != "admin"
            <if test="query != null and query != ''">
                and phone_no like concat(#{query} ,'%')
            </if>
        </where>
    </sql>

    <select id="selectCountByQuery" parameterType="com.zt.manage.domain.req.user.UserListQueryReq"
            resultType="java.lang.Integer">
        select count(id)
        <include refid="ListQuerySql"/>
    </select>

    <select id="selectListByQuery" parameterType="com.zt.manage.domain.req.user.UserListQueryReq"
            resultType="com.zt.manage.domain.dto.user.UserListDTO">
        select user_id, user_name, phone_no, lock_status, create_time
        <include refid="ListQuerySql"/>
        order by create_time desc
        limit #{pageIndex}, #{pageSize}
    </select>

    <insert id="insert" parameterType="user">
        insert ignore into sys_user(`user_id`, `user_name`, `phone_no`, `password`)
        values (#{userId}, #{userName}, #{phoneNo}, #{password} )
    </insert>
    <insert id="insertUserRole">
        insert into sys_user_role_mapper_list (`user_id`, `role_id`)
        values
        <foreach collection="roleList" item="roleId" separator=",">
            (#{userId}, #{roleId})
        </foreach>
    </insert>

    <update id="update" parameterType="user">
        update sys_user
        <set>
            <if test="userName != null and userName != ''">
                `user_name` = #{userName},
            </if>
            <if test="password != null and password != ''">
                `password` = #{password},
            </if>
            <if test="lockStatus != null">
                `lock_status` = #{lockStatus},
            </if>
        </set>
        where user_id = #{userId}
    </update>

    <delete id="deleteUser">
        delete from sys_user where user_id = #{userId};
        delete from sys_user_role_mapper_list where user_id = #{userId}
    </delete>
    <delete id="deleteUserRole">
        delete from sys_user_role_mapper_list where user_id = #{userId}
    </delete>

</mapper>